{"version":3,"sources":["components/NavBar.js","components/Textformss.js","components/Alertss.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","Textformss","useState","text","settext","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","trimEnd","Alertss","alert","role","msg","App","setmode","setalert","message","setTimeout","abouttext","body","propTypes","about","PropTypes","string","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f209f0ff.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function NavBar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/About\">{props.abouttext}</a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, {useState}from 'react'\r\nexport default function Textformss(props) {\r\n  const handleUp = () =>{\r\n//console.log(\"Uppercase was Clicked\");\r\nlet newtext = text.toUpperCase();\r\nsettext(newtext);\r\nprops.showalert(\"Converted to Uppercase!\",\"sucess\")\r\n  \r\n}\r\nconst handleLo = () => {\r\n  //console.log(\"Uppercase was Clicked\");\r\n  let newtext = text.toLowerCase();\r\n  settext(newtext);\r\n  props.showalert(\"Converted to lowercase!\",\"success\")\r\n    \r\n  }\r\n  const handleCl = () => {\r\n    //console.log(\"Uppercase was Clicked\");\r\n    let newtext = \"\";\r\n    settext(newtext);\r\n    props.showalert(\"Text Cleared!\",\"success\")\r\n      \r\n    }\r\n     const handleC = () => {\r\n    //  console.log(\"Uppercase was Clicked\");\r\n       var text = document.getElementById(\"Mybox\");\r\n       text.select();\r\n       props.showalert(\"Text Copied!\",\"success\")\r\n       navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleS = () => {\r\n      //  console.log(\"Uppercase was Clicked\");\r\n         let newtext = text.split(/[ ]+/);\r\n        settext(newtext.join(\" \"))\r\n        props.showalert(\"Extra Space removed!\",\"sucess\")\r\n      }\r\n  const handleonChange= (event) =>{\r\n    //console.log(\"onchanged\");\r\n    settext(event.target.value);\r\n\r\n  }\r\n  const [text,settext] =  useState(\"\");\r\n    return (\r\n      <>\r\n        <div className=\"Container\" style={{color:props.mode === 'dark'?'white':'#3c3b44'}}>\r\n          <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value ={text} onChange={handleonChange} \r\n  style={{backgroundColor:props.mode === 'dark'?'gray':'white', color:props.mode === 'dark'?'white':'black'}} id=\"Mybox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUp} >Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLo} >Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCl} >Clear text</button>\r\n <button className=\"btn btn-primary mx-1\" onClick={handleC} >Copy text</button> \r\n <button className=\"btn btn-primary mx-1\" onClick={handleS} >Remove Extra Spaces</button> \r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#3c3b44'}}>\r\n          <h1>Your Text Summary</h1>\r\n          <p>{text.length>0?text.trimEnd().split(\" \").length:0} words</p>\r\n          <p>{0.008 * text.split(\" \").length} Minute to Reads</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alertss(props) {\r\n    // const capitalize = (word)=>{\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    // }\r\n    return (\r\n     props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n           <strong>{props.alert.type}:</strong>{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport NavBar from './components/NavBar';\nimport Textformss from './components/Textformss'\nimport Alertss from './components/Alertss';\n//  import Abouts from './components/Abouts';\n//  import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [alert,setalert] = useState(null)\n  const showalert =(message,type)=>{\n         setalert({\n           msg:message,\n           type:type\n         })\n        setTimeout(() => {\n          setalert(null);\n        }, 1500);\n  }\n  const togglemode =()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#3c3b44'\n      showalert(\"Dark mode Enabled\",\"Success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white'\n      showalert(\"Light mode Enabled\",\"Success\");\n    }\n  }\n \n  return (\n   <>\n   {/* <Router> */}\n<NavBar title =\"textUtils\" abouttext =\"About Us\" mode={mode} togglemode={togglemode}/>\n       <Alertss alert={alert}></Alertss>\n        <div className=\"container my-3\">\n        <Textformss mode={mode} heading=\"Enter the Text to Analyze\" showalert={showalert}/> \n        {/* <Switch>\n          <Route exact path=\"/about\">\n          <Abouts></Abouts> \n          </Route>\n          <Route exact path=\"/\">\n             <Textformss mode={mode} heading=\"Enter the Text to Analyze\" showalert={showalert}/> \n          </Route> */}\n        {/* </Switch> */}\n        </div>\n        {/* </Router> */}\n   </>\n  );\n}\nexport default App;\nNavBar.propTypes = {\n  about:PropTypes.string,\n  title:PropTypes.string\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}